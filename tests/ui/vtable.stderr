warning: constructing this vtable may result in preemption count rule violation
  --> $DIR/vtable.rs:32:35
   |
32 |     let a: &'static dyn MyTrait = &Bad;
   |                                   ^^^^
   |
   = help: `<Bad as MyTrait>::foo` is constructed as part of `dyn MyTrait`
   = help: adjustment is inferred to be 1 and expectation is inferred to be 0..
   = help: while the expected adjustment for vtable is 0 and the expectation is 0

WARN klint::ctxt no klint metadata found for crate alloc
warning: constructing this vtable may result in preemption count rule violation
  --> $DIR/vtable.rs:50:32
   |
50 |     let _a: Box<dyn MyTrait> = Box::new(BadDrop);
   |                                ^^^^^^^^^^^^^^^^^
   |
   = help: drop glue of `BadDrop` is constructed as part of `dyn MyTrait`
   = help: adjustment is inferred to be 1 and expectation is inferred to be 0..
   = help: while the expected adjustment for vtable is 0 and the expectation is 0

error: trait method annotated to have preemption count adjustment of 1
  --> $DIR/vtable.rs:75:5
   |
75 |     fn foo(&self) {}
   |     ^^^^^^^^^^^^^
   |
   = note: but the adjustment of this implementing function is 0
note: the trait method is defined here
  --> $DIR/vtable.rs:55:5
   |
55 |     fn foo(&self);
   |     ^^^^^^^^^^^^^^

warning: constructing this vtable may result in preemption count rule violation
  --> $DIR/vtable.rs:80:42
   |
80 |     let a: &'static dyn AnnotatedTrait = &AnnotatedBad;
   |                                          ^^^^^^^^^^^^^
   |
   = help: `<AnnotatedBad as AnnotatedTrait>::foo` is constructed as part of `dyn AnnotatedTrait`
   = help: adjustment is inferred to be 0 and expectation is inferred to be 0..
   = help: while the expected adjustment for vtable is 1 and the expectation is 0

error: aborting due to previous error; 3 warnings emitted

